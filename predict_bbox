{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":354734,"sourceType":"modelInstanceVersion","modelInstanceId":295886,"modelId":316493}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import tensorflow as tf\nimport kagglehub\nfrom datasets import load_dataset\nfrom PIL import Image\nimport cv2\nimport numpy as np\nfrom tensorflow.keras.models import load_model","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-24T17:25:10.921033Z","iopub.execute_input":"2025-04-24T17:25:10.921391Z","iopub.status.idle":"2025-04-24T17:25:10.927490Z","shell.execute_reply.started":"2025-04-24T17:25:10.921364Z","shell.execute_reply":"2025-04-24T17:25:10.926586Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"dataset = load_dataset(\"naver-clova-ix/cord-v2\", split=\"test\")\ngt = dataset[0]['ground_truth'] \nprint(gt)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-24T17:25:10.930198Z","iopub.execute_input":"2025-04-24T17:25:10.930489Z","iopub.status.idle":"2025-04-24T17:25:12.107472Z","shell.execute_reply.started":"2025-04-24T17:25:10.930464Z","shell.execute_reply":"2025-04-24T17:25:12.106557Z"}},"outputs":[{"name":"stdout","text":"{\"gt_parse\": {\"menu\": {\"nm\": \"-TICKET CP\", \"num\": \"901016\", \"cnt\": \"2\", \"price\": \"60.000\", \"itemsubtotal\": \"60.000\"}, \"sub_total\": {\"subtotal_price\": \"60.000\", \"discount_price\": \"-60.000\", \"tax_price\": \"5.455\"}, \"total\": {\"total_price\": \"60.000\", \"creditcardprice\": \"60.000\", \"menuqty_cnt\": \"2.00\"}}, \"meta\": {\"version\": \"2.0.0\", \"split\": \"test\", \"image_id\": 0, \"image_size\": {\"width\": 432, \"height\": 648}}, \"valid_line\": [{\"words\": [{\"quad\": {\"x2\": 92, \"y3\": 412, \"x3\": 92, \"y4\": 412, \"x1\": 42, \"y1\": 392, \"x4\": 42, \"y2\": 392}, \"is_key\": 0, \"row_id\": 2028655, \"text\": \"901016\"}], \"category\": \"menu.num\", \"group_id\": 11, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 200, \"y3\": 406, \"x3\": 200, \"y4\": 406, \"x1\": 146, \"y1\": 386, \"x4\": 146, \"y2\": 386}, \"is_key\": 0, \"row_id\": 2028655, \"text\": \"-TICKET\"}, {\"quad\": {\"x2\": 222, \"y3\": 406, \"x3\": 222, \"y4\": 406, \"x1\": 202, \"y1\": 386, \"x4\": 202, \"y2\": 386}, \"is_key\": 0, \"row_id\": 2028655, \"text\": \"CP\"}], \"category\": \"menu.nm\", \"group_id\": 11, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 100, \"y3\": 434, \"x3\": 100, \"y4\": 434, \"x1\": 90, \"y1\": 416, \"x4\": 90, \"y2\": 416}, \"is_key\": 0, \"row_id\": 2028657, \"text\": \"2\"}], \"category\": \"menu.cnt\", \"group_id\": 11, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 224, \"y3\": 430, \"x3\": 224, \"y4\": 430, \"x1\": 174, \"y1\": 410, \"x4\": 174, \"y2\": 410}, \"is_key\": 0, \"row_id\": 2028657, \"text\": \"60.000\"}], \"category\": \"menu.price\", \"group_id\": 11, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 352, \"y3\": 430, \"x3\": 352, \"y4\": 430, \"x1\": 304, \"y1\": 410, \"x4\": 304, \"y2\": 410}, \"is_key\": 0, \"row_id\": 2028657, \"text\": \"60.000\"}], \"category\": \"menu.itemsubtotal\", \"group_id\": 11, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 188, \"y3\": 480, \"x3\": 188, \"y4\": 480, \"x1\": 146, \"y1\": 460, \"x4\": 146, \"y2\": 460}, \"is_key\": 1, \"row_id\": 2028660, \"text\": \"TOTAL\"}, {\"quad\": {\"x2\": 223, \"y3\": 477, \"x3\": 225, \"y4\": 480, \"x1\": 188, \"y1\": 460, \"x4\": 190, \"y2\": 457}, \"is_key\": 1, \"row_id\": 2028660, \"text\": \"DISC\"}, {\"quad\": {\"x2\": 238, \"y3\": 476, \"x3\": 238, \"y4\": 476, \"x1\": 226, \"y1\": 460, \"x4\": 226, \"y2\": 460}, \"is_key\": 1, \"row_id\": 2028660, \"text\": \"$\"}, {\"quad\": {\"x2\": 353, \"y3\": 478, \"x3\": 354, \"y4\": 481, \"x1\": 297, \"y1\": 460, \"x4\": 298, \"y2\": 457}, \"is_key\": 0, \"row_id\": 2028660, \"text\": \"-60.000\"}], \"category\": \"sub_total.discount_price\", \"group_id\": 12, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 240, \"y3\": 502, \"x3\": 240, \"y4\": 502, \"x1\": 212, \"y1\": 482, \"x4\": 212, \"y2\": 482}, \"is_key\": 1, \"row_id\": 2028663, \"text\": \"TAX\"}, {\"quad\": {\"x2\": 354, \"y3\": 504, \"x3\": 354, \"y4\": 504, \"x1\": 312, \"y1\": 484, \"x4\": 312, \"y2\": 484}, \"is_key\": 0, \"row_id\": 2028663, \"text\": \"5.455\"}], \"category\": \"sub_total.tax_price\", \"group_id\": 12, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 238, \"y3\": 528, \"x3\": 238, \"y4\": 528, \"x1\": 176, \"y1\": 508, \"x4\": 176, \"y2\": 508}, \"is_key\": 1, \"row_id\": 2028664, \"text\": \"Subtotal\"}, {\"quad\": {\"x2\": 356, \"y3\": 530, \"x3\": 356, \"y4\": 530, \"x1\": 306, \"y1\": 508, \"x4\": 306, \"y2\": 508}, \"is_key\": 0, \"row_id\": 2028664, \"text\": \"60.000\"}], \"category\": \"sub_total.subtotal_price\", \"group_id\": 12, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 122, \"y3\": 556, \"x3\": 122, \"y4\": 556, \"x1\": 44, \"y1\": 536, \"x4\": 44, \"y2\": 536}, \"is_key\": 1, \"row_id\": 2028665, \"text\": \"TOTAL\"}, {\"quad\": {\"x2\": 368, \"y3\": 555, \"x3\": 368, \"y4\": 555, \"x1\": 280, \"y1\": 532, \"x4\": 280, \"y2\": 532}, \"is_key\": 0, \"row_id\": 2028665, \"text\": \"60.000\"}], \"category\": \"total.total_price\", \"group_id\": 6, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 194, \"y3\": 555, \"x3\": 192, \"y4\": 554, \"x1\": 136, \"y1\": 532, \"x4\": 136, \"y2\": 531}, \"is_key\": 1, \"row_id\": 2028665, \"text\": \"(Qty\"}, {\"quad\": {\"x2\": 265, \"y3\": 552, \"x3\": 266, \"y4\": 552, \"x1\": 207, \"y1\": 533, \"x4\": 207, \"y2\": 532}, \"is_key\": 0, \"row_id\": 2028665, \"text\": \"2.00\"}], \"category\": \"total.menuqty_cnt\", \"group_id\": 6, \"sub_group_id\": 0}, {\"words\": [{\"quad\": {\"x2\": 88, \"y3\": 608, \"x3\": 88, \"y4\": 608, \"x1\": 60, \"y1\": 586, \"x4\": 60, \"y2\": 586}, \"is_key\": 1, \"row_id\": 2028669, \"text\": \"EDC\"}, {\"quad\": {\"x2\": 124, \"y3\": 606, \"x3\": 124, \"y4\": 606, \"x1\": 90, \"y1\": 586, \"x4\": 90, \"y2\": 586}, \"is_key\": 1, \"row_id\": 2028669, \"text\": \"CIMB\"}, {\"quad\": {\"x2\": 168, \"y3\": 606, \"x3\": 168, \"y4\": 606, \"x1\": 126, \"y1\": 584, \"x4\": 126, \"y2\": 584}, \"is_key\": 1, \"row_id\": 2028669, \"text\": \"NIAGA\"}, {\"quad\": {\"x2\": 196, \"y3\": 604, \"x3\": 196, \"y4\": 604, \"x1\": 170, \"y1\": 584, \"x4\": 170, \"y2\": 584}, \"is_key\": 1, \"row_id\": 2028669, \"text\": \"No:\"}, {\"quad\": {\"x2\": 250, \"y3\": 602, \"x3\": 250, \"y4\": 602, \"x1\": 198, \"y1\": 582, \"x4\": 198, \"y2\": 582}, \"is_key\": 1, \"row_id\": 2028669, \"text\": \"xx7730\"}, {\"quad\": {\"x2\": 366, \"y3\": 604, \"x3\": 366, \"y4\": 604, \"x1\": 316, \"y1\": 584, \"x4\": 316, \"y2\": 584}, \"is_key\": 0, \"row_id\": 2028669, \"text\": \"60.000\"}], \"category\": \"total.creditcardprice\", \"group_id\": 6, \"sub_group_id\": 0}], \"roi\": {\"x2\": 432, \"y3\": 687, \"x3\": 451, \"y4\": 699, \"x1\": 1, \"y1\": 188, \"x4\": -19, \"y2\": 173}, \"repeating_symbol\": [[{\"quad\": {\"x2\": 346, \"y3\": 380, \"x3\": 346, \"y4\": 384, \"x1\": 46, \"y1\": 368, \"x4\": 44, \"y2\": 364}, \"text\": \"-\"}], [{\"quad\": {\"x2\": 349, \"y3\": 452, \"x3\": 351, \"y4\": 460, \"x1\": 47, \"y1\": 441, \"x4\": 45, \"y2\": 437}, \"text\": \"-\"}], [{\"quad\": {\"x2\": 356, \"y3\": 628, \"x3\": 356, \"y4\": 632, \"x1\": 48, \"y1\": 615, \"x4\": 47, \"y2\": 611}, \"text\": \"-\"}]], \"dontcare\": [[{\"x2\": 149, \"y3\": 649, \"x3\": 151, \"y4\": 649, \"x1\": 41, \"y1\": 635, \"x4\": 39, \"y2\": 635}]]}\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"image = dataset[0]['image']  # Sudah dalam bentuk PIL.Image\nimage = image.convert(\"RGB\")  # Pastikan formatnya RGB","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-24T17:25:12.108957Z","iopub.execute_input":"2025-04-24T17:25:12.109370Z","iopub.status.idle":"2025-04-24T17:25:12.123966Z","shell.execute_reply.started":"2025-04-24T17:25:12.109342Z","shell.execute_reply":"2025-04-24T17:25:12.123027Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"# from tensorflow.keras.models import load_model\n\n# # Coba load dulu modelnya\n# model = load_model(\"/kaggle/input/obj_model/keras/default/1/obj_resnet50v2_v2.h5\", compile=False)\n\n# # Lihat input dan output model\n# model.summary()\n\n# # Cek bentuk input yang diminta\n# print(\"\\nModel Inputs:\")\n# print(model.input)\n\n# # Cek bentuk output\n# print(\"\\nModel Outputs:\")\n# print(model.output)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-24T17:25:12.125011Z","iopub.execute_input":"2025-04-24T17:25:12.125709Z","iopub.status.idle":"2025-04-24T17:25:12.130208Z","shell.execute_reply.started":"2025-04-24T17:25:12.125667Z","shell.execute_reply":"2025-04-24T17:25:12.129072Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"import tensorflow.keras.backend as K\n\nif isinstance(image, Image.Image):\n    image_np = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2BGR)\nelse:\n    image_np = image.copy()\n\n\ndef focal_loss(gamma=2., alpha=0.25):\n    def loss(y_true, y_pred):\n        labels = y_true\n        logits = y_pred\n        ce = K.binary_crossentropy(labels, logits)\n        p_t = labels * logits + (1 - labels) * (1 - logits)\n        alpha_factor = labels * alpha + (1 - labels) * (1 - alpha)\n        modulating_factor = K.pow(1.0 - p_t, gamma)\n        return K.sum(alpha_factor * modulating_factor * ce, axis=-1)\n    return loss\n\ndef smooth_l1_loss(y_true, y_pred, delta=1.0):\n    diff = y_true - y_pred\n    abs_diff = K.abs(diff)\n    loss = tf.where(abs_diff < delta, 0.5 * diff ** 2 / delta, abs_diff - 0.5 * delta)\n    return K.sum(loss, axis=-1)\n\n\n# Load the model with custom_objects\nmodel_path = '/kaggle/input/obj_model/keras/default/1/obj_resnet50v2_v2.h5'\nbbox_pred, class_pred = load_model(\n    model_path,\n    custom_objects={\n        'focal_loss': focal_loss,  # TANPA KURUNG\n        'smooth_l1_loss': smooth_l1_loss\n    },\n    compile=False\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-24T17:25:12.132528Z","iopub.execute_input":"2025-04-24T17:25:12.132851Z","iopub.status.idle":"2025-04-24T17:25:13.660997Z","shell.execute_reply.started":"2025-04-24T17:25:12.132829Z","shell.execute_reply":"2025-04-24T17:25:13.659441Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_31/3173350534.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;31m# Load the model with custom_objects\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0mmodel_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'/kaggle/input/obj_model/keras/default/1/obj_resnet50v2_v2.h5'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m bbox_pred, class_pred = load_model(\n\u001b[0m\u001b[1;32m     30\u001b[0m     \u001b[0mmodel_path\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m     custom_objects={\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/saving/saving_api.py\u001b[0m in \u001b[0;36mload_model\u001b[0;34m(filepath, custom_objects, compile, safe_mode)\u001b[0m\n\u001b[1;32m    192\u001b[0m         )\n\u001b[1;32m    193\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mendswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\".h5\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\".hdf5\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 194\u001b[0;31m         return legacy_h5_format.load_model_from_hdf5(\n\u001b[0m\u001b[1;32m    195\u001b[0m             \u001b[0mfilepath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcustom_objects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcustom_objects\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcompile\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    196\u001b[0m         )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/legacy/saving/legacy_h5_format.py\u001b[0m in \u001b[0;36mload_model_from_hdf5\u001b[0;34m(filepath, custom_objects, compile)\u001b[0m\n\u001b[1;32m    131\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    132\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0msaving_options\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras_option_scope\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muse_legacy_config\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 133\u001b[0;31m             model = saving_utils.model_from_config(\n\u001b[0m\u001b[1;32m    134\u001b[0m                 \u001b[0mmodel_config\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcustom_objects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcustom_objects\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    135\u001b[0m             )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/legacy/saving/saving_utils.py\u001b[0m in \u001b[0;36mmodel_from_config\u001b[0;34m(config, custom_objects)\u001b[0m\n\u001b[1;32m     83\u001b[0m     \u001b[0mconfig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_find_replace_nested_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"keras.\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"keras.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     84\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 85\u001b[0;31m     return serialization.deserialize_keras_object(\n\u001b[0m\u001b[1;32m     86\u001b[0m         \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     87\u001b[0m         \u001b[0mmodule_objects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mMODULE_OBJECTS\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mALL_OBJECTS\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/legacy/saving/serialization.py\u001b[0m in \u001b[0;36mdeserialize_keras_object\u001b[0;34m(identifier, module_objects, custom_objects, printable_module_name)\u001b[0m\n\u001b[1;32m    493\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    494\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;34m\"custom_objects\"\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marg_spec\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 495\u001b[0;31m                 deserialized_obj = cls.from_config(\n\u001b[0m\u001b[1;32m    496\u001b[0m                     \u001b[0mcls_config\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    497\u001b[0m                     custom_objects={\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/models/model.py\u001b[0m in \u001b[0;36mfrom_config\u001b[0;34m(cls, config, custom_objects)\u001b[0m\n\u001b[1;32m    523\u001b[0m             \u001b[0;32mfrom\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunctional\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mfunctional_from_config\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    524\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 525\u001b[0;31m             return functional_from_config(\n\u001b[0m\u001b[1;32m    526\u001b[0m                 \u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcustom_objects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcustom_objects\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    527\u001b[0m             )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/models/functional.py\u001b[0m in \u001b[0;36mfunctional_from_config\u001b[0;34m(cls, config, custom_objects)\u001b[0m\n\u001b[1;32m    494\u001b[0m                     \u001b[0mnode_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnode_data_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnode_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    495\u001b[0m                     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 496\u001b[0;31m                         \u001b[0mprocess_node\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlayer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnode_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    497\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    498\u001b[0m                     \u001b[0;31m# If the node does not have all inbound layers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/models/functional.py\u001b[0m in \u001b[0;36mprocess_node\u001b[0;34m(layer, node_data)\u001b[0m\n\u001b[1;32m    441\u001b[0m         \u001b[0;31m# Call layer on its inputs, thus creating the node\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    442\u001b[0m         \u001b[0;31m# and building the layer if needed.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 443\u001b[0;31m         \u001b[0mlayer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    444\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    445\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mprocess_layer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlayer_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    120\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    121\u001b[0m             \u001b[0;31m# `keras.config.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 122\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    123\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.11/inspect.py\u001b[0m in \u001b[0;36mbind\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3193\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mpassed\u001b[0m \u001b[0marguments\u001b[0m \u001b[0mcan\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mbe\u001b[0m \u001b[0mbound\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3194\u001b[0m         \"\"\"\n\u001b[0;32m-> 3195\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_bind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3196\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3197\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mbind_partial\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m/\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.11/inspect.py\u001b[0m in \u001b[0;36m_bind\u001b[0;34m(self, args, kwargs, partial)\u001b[0m\n\u001b[1;32m   3114\u001b[0m                     \u001b[0mparam\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3115\u001b[0m                 \u001b[0;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3116\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'too many positional arguments'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3117\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3118\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0mparam\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkind\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0m_VAR_KEYWORD\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_KEYWORD_ONLY\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: too many positional arguments"],"ename":"TypeError","evalue":"too many positional arguments","output_type":"error"}],"execution_count":10},{"cell_type":"code","source":"# Preprocessing gambar\nimage_resized = cv2.resize(processed_rgb, (640, 640))  # Resize sesuai dengan input model\nimage_array = img_to_array(image_resized) / 255.0  # Normalisasi\nimage_array = np.expand_dims(image_array, axis=0)  # Tambahkan batch dimension\n        \n# Masukkan gambar ke model\nprediction_outputs = model.predict([image_array])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-24T17:25:13.661602Z","iopub.status.idle":"2025-04-24T17:25:13.661951Z","shell.execute_reply.started":"2025-04-24T17:25:13.661797Z","shell.execute_reply":"2025-04-24T17:25:13.661811Z"}},"outputs":[],"execution_count":null}]}